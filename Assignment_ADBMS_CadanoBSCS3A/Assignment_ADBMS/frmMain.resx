<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAaGvBwGRn/cBkZ/3AZ
        Gf9wGRn/cRkZ7gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxGRmscBgYsW8a
        GndvGhp3cBgYsnEaGqoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgCAgCHEY
        GIFxGRnucBkZ7HEYGH5tJCQHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGYa
        GgpwGRndbxkZXHAaGmJwGRnYgCAgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG8a
        Gh5vGhp3cBgYqAAAAAAAAAAAcBkZr3EZGW9vGhoeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG8a
        GidwGRnUcBkZ33AbGzAAAAAAAAAAAHEZGTRwGRnZcRkZ1XIbGyYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABxFxcibxkZ7HAZGd0AAAAAcBgYQHAYGEAAAAAAcBkZ4W8ZGexsFxchAAAAAAAAAAAAAAAAAAAAAAAA
        AABtEhIOcBkZy3EZGbdwGRmQAAAAAHAaGoBwGhqAAAAAAHAaGpRxGRm1cBkZy3YUFA0AAAAAAAAAAAAA
        AABmGhoKcBkZynAYGJJwGhq0bxcXTAAAAABwGhqAcBoagAAAAABvGhpOcBgYsnEYGJNwGRnJcRwcCQAA
        AAAAAAAAbxoaY3AYGLIAAAABcBkZzW4XFywAAAAAAAAAAAAAAAAAAAAAbxwcLnAZGcsAAAABcRoas3Aa
        GmIAAAAAAAAAAHEaGmFwGBixbSQkB3AZGelwGhqCbxoad28aGndvGhp3bxoad3EZGYNwGBjobSQkB3AY
        GLJxGBhfAAAAAAAAAABtJCQHcBgYsnEZGe5wGRnQcRgYiHEYGIhxGBiIcRgYiHEYGIhxGBiIbxoa0XEZ
        Ge5wGBixgCsrBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA+B8AAPmfAAD8fwAA/b8AAP2/AADzzwAA888AAOJH
        AADGYwAA1+sAANPLAADAAwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAcBoa8HAZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZ
        Gf9wGRnvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwGRnQcBkZ/3AZGf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZ
        Gf9wGRn/cBkZ/3AZGc8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG8ZGaVwGRn/cRoas2wXFyEAAAAAAAAAAAAA
        AAAAAAAAcRcXIm8ZGbVwGRn/cRkZowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAchoaHXAZGe1wGRn/cBkZ/3AZ
        Gf9wGRn/cBkZ/3AZGf9wGRn/cBkZ/3AZGe1yGhodAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbxoaHnAa
        GqlvGRnhcBkZ/3AZGf9wGRn/cBkZ/3AZGeBwGhqpbxoaHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAVQAAA3AaGqlwGRn/cBkZ/3AZGf9wGRn/bxgYngAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        /OfjAADH8AAAD/h//h//////////////////////
</value>
  </data>
</root>